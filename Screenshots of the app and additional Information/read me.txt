Android app software development to help Archelon Society in the survey implementing the morning surveys

The App has 7 screens implemented via fragments. 

The first three screens are implemented via fragments and their associated view model to show the one complete UI sequence to submit the form in the room database.

First Screen: It is the Login Fragment Screen1 that takes a user credentials and authenticates it against the REST API provided. A REST request is built using retrorfit plus moshi plus okhttp client and sent via a coroutine. After the successful user authentication, a "Login Success" toast(message) appear on the screen 2 and the return token is stored and passed onto the next fragment i.e. New Survey fragment(Screen 2). User credentials entered are turned red if the authentication is incomplete or incorrect.

Second Screen: It is the New Survey Fragment Screen2. Once the user authentication is successful. It is brought to this screen. The user is allowed to choose a type of task out of five task 
(Start New Survey, Nest Check, Emergency Relocation, Start Excavation and Logout). Each of these five tasks are reperesented in the form of buttons on this screen. However, for the moment only morning survey is implemented but functions(buttons) are provided for other tasks as well.

Third Screen - It is the Start Survey Fragment Screen3 also called as Morning Survey screen. It consists of all the input fields available on the archelon API documentation that have been implemented into this screen for User input that is stored into the Morning Survey database when the submit button is pressed.
The location that is gps_latitude and longitude is fixed and recorded, by taking users permission, via a fused location provider when the submit is pressed.
The sequence of the flow of this form data that will be inserting the user input data via UI into the room database are as follows: 
UI(StartSurveyFragment)-->viewmodel(MorningSurveyViewModel)-->repository(MorningSurveyRepository)--->dao interface(MorningSurveyDatabase DAO) will be inserting to the room database.
All the functionality is handled in the view model (not in the fragment). A scroll view is implemented in the layout tag (activity_start_survey.xml layout file) to accommodate all fields. An instance of a database is built/retrieved when the view model is created. The Database is instantiated via a coroutine and not on the main thread. Hence, it is not a blocking call and will have less chance for the app to break. 
When the submit button is pressed, the collected user data for the morning survey is loaded into the database. A Previous button is implemented on this screen3 to go back to the New Survey Fragment screen2. A Next button is also implemented on this screen3 to take forward to screen 4 to 7. Navigation has been defined. The text fields are forced to accept only valid data with respect to the field for example when a user tries to select "Distance to Sea" he will only see a numeric keypad and can only enter numbers.

A unit test has been implemented to instantiate a database, create a morning survey, load the morning survey into the database, retrieve it and check a value.

The rest Screen 4 to 7 that is ObserverFragment, AddNewEventFragment, ChooseEventFragment and Adult Emergency Fragment have been designed via ui fragment screens and the next button takes it to each of these fragment but the functionality have not been fully implemented due to less time and will be implementing in future.
A Cancel Button is also implemented on Screen 4 to 7 that pops up a window for a user to select if he/she wants to cancel the survey.

There were alot of kapt problems and errors that I faced while implementing this app that took alot of the time and hence most of the work of the app will be done in the future.

Four of the most severe problems that I faced while working on android studio are as follows:

Problem 1
As mentioned above that I had alot of kapt issues one of them was the use of kotlin version 1.4 it will give error as below:

kapt error Execution failed for task ':app:kaptDebugKotlin'.
> A failure occurred while executing org.jetbrains.kotlin.gradle.internal.KaptExecution
> java.lang.reflect.InvocationTargetException (no error message)

Solution to Problem 1 as given below:
 As per https://forums.bignerdranch.com/t/solved-execution-failed-for-task-kaptdebugkotlin/17431/4
downgrade the  kotlin version from buildscript.ext.kotlin_version=“1.4.21” to “1.3.21 inorder to resolve. Hence the first problem was solved.

Problem 2
If the kotlin version is downgraded to 1.3.21 then Problem 2 arises. It will give error as below:

kapt\morning-survey-app\app\src\main\java\com\example\archelocapp_1\others\StartSurvey.kt: (46, 14): 'also((T) -> Unit): T' is only available
since Kotlin 1.3.50 and cannot be used in Kotlin 1.3
This means that unit testing is not supported by the downgraded version of kotlin.

Solution to Problem 2 as given below:
Used the version 1.3.50 in the build. gradle project that supports both the kapt issues. This was figured after spending alot of the time and trying different kotlin versions to synchronise build. gradle file.

Problem 3
This kapt issue is related to the user authentication return token. It is given as below

e: C:\Users\Sabrina1\Desktop\App work\morning
survey testing for kapt\morning-survey-app\app\src\main\java\com\example\archelocapp_1\ui\LoginFragment.kt:
(50, 44): Unresolved reference: of

Solution to Problem 3: Set the token in the navigation.xml file, then build clean project and run the app again this will resolve the error.

Problem 4
There were issues in the app getting loaded. The errors were as follows:
2021-08-16 15:47:53.443 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:47:53.482 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:47:53.516 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:47:53.557 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:48:25.906 1788-1788/? E/netmgr: Failed to open QEMU pipe 'qemud:network': Invalid argument
2021-08-16 15:48:25.907 1788-1788/? E/netmgr: WifiForwarder unable to open QEMU pipe: Invalid argument
2021-08-16 15:48:34.298 1714-1751/? E/storaged: getDiskStats failed with result NOT_SUPPORTED and size 0
2021-08-16 15:48:34.949 4532-6298/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:49:00.003 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:49:25.967 1788-1788/? E/netmgr: Failed to open QEMU pipe 'qemud:network': Invalid argument
2021-08-16 15:49:25.967 1788-1788/? E/netmgr: WifiForwarder unable to open QEMU pipe: Invalid argument
2021-08-16 15:49:34.299 1714-1751/? E/storaged: getDiskStats failed with result NOT_SUPPORTED and size 0
2021-08-16 15:50:19.360 2285-6300/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:50:25.994 1788-1788/? E/netmgr: Failed to open QEMU pipe 'qemud:network': Invalid argument
2021-08-16 15:50:25.994 1788-1788/? E/netmgr: WifiForwarder unable to open QEMU pipe: Invalid argument
2021-08-16 15:50:30.494 2501-6303/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:50:34.301 1714-1751/? E/storaged: getDiskStats failed with result NOT_SUPPORTED and size 0
2021-08-16 15:51:00.006 1862-1876/? E/memtrack: Couldn't load memtrack module
2021-08-16 15:51:13.689 6308-6308/? E/android.youtub: Not starting debugger since process cannot load the jdwp agent.
2021-08-16 15:51:25.999 1788-1788/? E/netmgr: Failed to open QEMU pipe 'qemud:network': Invalid argument
2021-08-16 15:51:25.999 1788-1788/? E/netmgr: WifiForwarder unable to open QEMU pipe: Invalid argument
2021-08-16 15:51:34.302 1714-1751/? E/storaged: getDiskStats failed with result NOT_SUPPORTED and size 0
2021-08-16 15:51:37.256 1862-1876/? E/memtrack: Couldn't load memtrack module

Solution to Problem 4: Again build the project, see the errors in the logcat and add the inbuild permissions in the android studio by adding "require context" keyword and anotating it. This is done for taking permissions from the user to store their gps_longitude and latitude location.

Emulator Used: PIXEL 4 API 28 pie 9.0

Android version 4.1

Local persistent storage that is room library was also used 

username shasan06

password ^dusk|FULL|HIGH^





